"use strict";
/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeGroupUsers = void 0;
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var get_portal_url_1 = require("../util/get-portal-url");
var array_1 = require("../util/array");
/**
 * ```js
 * import { removeGroupUsers } from "@esri/arcgis-rest-portal";
 * //
 * removeGroupUsers({
 *   id: groupId,
 *   users: ["username1", "username2"],
 *   authentication
 * })
 * .then(response);
 * ```
 * Add users to a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/remove-users-from-group.htm) for more information.
 *
 * @param requestOptions  - Options for the request
 * @returns A Promise
 */
function removeGroupUsers(requestOptions) {
    var id = requestOptions.id, usersToRemove = requestOptions.users;
    var url = get_portal_url_1.getPortalUrl(requestOptions) + "/community/groups/" + id + "/removeUsers";
    var safeSend = function (users) {
        var options = tslib_1.__assign(tslib_1.__assign({}, requestOptions), { users: users, params: { users: users } });
        return arcgis_rest_request_1.request(url, options)
            .catch(function (error) { return ({ errors: [error] }); });
    };
    // the ArcGIS REST API only allows to add no more than 25 users per request,
    // see https://developers.arcgis.com/rest/users-groups-and-items/remove-users-from-group.htm
    var promises = array_1.chunk(usersToRemove, 25).map(function (usersChunk) { return safeSend(usersChunk); });
    return Promise.all(promises)
        .then(function (results) {
        var filtered = function (propName) { return results
            .filter(function (result) { return result[propName]; })
            .reduce(function (collection, result) { return collection.concat(result[propName]); }, []); };
        var errors = filtered('errors');
        var consolidated = { notRemoved: filtered('notRemoved') };
        return errors.length ? tslib_1.__assign(tslib_1.__assign({}, consolidated), { errors: errors }) : consolidated;
    });
}
exports.removeGroupUsers = removeGroupUsers;
//# sourceMappingURL=remove-users.js.map
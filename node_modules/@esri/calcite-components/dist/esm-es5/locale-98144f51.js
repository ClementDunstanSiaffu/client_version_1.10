/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.
 * v1.0.0-beta.86
 */
import{n as numberKeys}from"./key-1219c482.js";var allLeadingZerosOptionallyNegative=/^([-0])0+(?=\d)/;var decimalOnlyAtEndOfString=/(?!^\.)\.$/;var allHyphensExceptTheStart=/(?!^-)-/g;var isNegativeDecimalOnlyZeros=/^-\b0\b\.?0*$/;var BigDecimal=function(){function e(r){if(r instanceof e){return r}var t=String(r).split(".").concat(""),n=t[0],i=t[1];this.value=BigInt(n+i.padEnd(e.DECIMALS,"0").slice(0,e.DECIMALS))+BigInt(e.ROUNDED&&i[e.DECIMALS]>="5");this.isNegative=r.charAt(0)==="-"}e._divRound=function(r,t){return e.fromBigInt(r/t+(e.ROUNDED?r*BigInt(2)/t%BigInt(2):BigInt(0)))};e.fromBigInt=function(r){return Object.assign(Object.create(e.prototype),{value:r})};e.prototype.toString=function(){var r=this.value.toString().replace(new RegExp("-","g"),"").padStart(e.DECIMALS+1,"0");var t=r.slice(0,-e.DECIMALS);var n=r.slice(-e.DECIMALS).replace(/\.?0+$/,"");var i=t.concat(n.length?"."+n:"");return(this.isNegative?"-":"").concat(i)};e.prototype.formatToParts=function(r,t){var n=createLocaleNumberFormatter(r,t);var i=this.value.toString().replace(new RegExp("-","g"),"").padStart(e.DECIMALS+1,"0");var a=i.slice(0,-e.DECIMALS);var u=i.slice(-e.DECIMALS).replace(/\.?0+$/,"");var o=n.formatToParts(BigInt(a));this.isNegative&&o.unshift({type:"minusSign",value:getMinusSign(r)});if(u.length){o.push({type:"decimal",value:getDecimalSeparator(r)});u.split("").forEach((function(e){return o.push({type:"fraction",value:e})}))}return o};e.prototype.add=function(r){return e.fromBigInt(this.value+new e(r).value)};e.prototype.subtract=function(r){return e.fromBigInt(this.value-new e(r).value)};e.prototype.multiply=function(r){return e._divRound(this.value*new e(r).value,e.SHIFT)};e.prototype.divide=function(r){return e._divRound(this.value*e.SHIFT,new e(r).value)};return e}();BigDecimal.DECIMALS=100;BigDecimal.ROUNDED=true;BigDecimal.SHIFT=BigInt("1"+"0".repeat(BigDecimal.DECIMALS));function isValidNumber(e){return!(!e||isNaN(Number(e)))}function parseNumberString(e){if(!e||!stringContainsNumbers(e)){return""}return sanitizeExponentialNumberString(e,(function(e){var r=false;var t=e.split("").filter((function(e,t){if(e.match(/\./g)&&!r){r=true;return true}if(e.match(/\-/g)&&t===0){return true}return numberKeys.includes(e)})).reduce((function(e,r){return e+r}));return isValidNumber(t)?new BigDecimal(t).toString():""}))}function sanitizeDecimalString(e){return e.replace(decimalOnlyAtEndOfString,"")}function sanitizeNegativeString(e){return e.replace(allHyphensExceptTheStart,"")}function sanitizeLeadingZeroString(e){return e.replace(allLeadingZerosOptionallyNegative,"$1")}function sanitizeNumberString(e){return sanitizeExponentialNumberString(e,(function(e){var r=sanitizeNegativeString(sanitizeDecimalString(sanitizeLeadingZeroString(e)));return isValidNumber(r)?isNegativeDecimalOnlyZeros.test(r)?r:new BigDecimal(r).toString():e}))}function sanitizeExponentialNumberString(e,r){if(!e){return e}var t=e.toLowerCase().indexOf("e")+1;return e.replace(/[eE]*$/g,"").substring(0,t).concat(e.slice(t).replace(/[eE]/g,"")).split(/[eE]/).map((function(e,t){return t===1?r(e.replace(/\./g,"")):r(e)})).join("e").replace(/^e/,"1e")}function stringContainsNumbers(e){return numberKeys.some((function(r){return e.includes(r)}))}var locales=["ar","bg","bs","ca","cs","da","de","de-CH","el","en","en-AU","en-CA","en-GB","es","es-MX","et","fi","fr","fr-CH","he","hi","hr","hu","id","it","it-CH","ja","ko","lt","lv","mk","nb","nl","pl","pt","pt-PT","ro","ru","sk","sl","sr","sv","th","tr","uk","vi","zh-CN","zh-HK","zh-TW"];var allDecimalsExceptLast=new RegExp("[.](?=.*[.])","g");var everythingExceptNumbersDecimalsAndMinusSigns=new RegExp("[^0-9-.]","g");var defaultGroupSeparator=new RegExp(",","g");var browserNumberingSystem=(new Intl.NumberFormat).resolvedOptions().numberingSystem;var defaultNumberingSystem=browserNumberingSystem==="arab"?"latn":browserNumberingSystem;function createLocaleNumberFormatter(e,r){if(r===void 0){r=defaultNumberingSystem}return new Intl.NumberFormat(e,{minimumFractionDigits:0,maximumFractionDigits:20,numberingSystem:r})}function delocalizeNumberString(e,r){return sanitizeExponentialNumberString(e,(function(e){var t=e.replace(getMinusSign(r),"-").replace(getGroupSeparator(r),"").replace(getDecimalSeparator(r),".").replace(allDecimalsExceptLast,"").replace(everythingExceptNumbersDecimalsAndMinusSigns,"");return isValidNumber(t)?t:e}))}function getGroupSeparator(e){var r=createLocaleNumberFormatter(e);var t=r.formatToParts(1234567);var n=t.find((function(e){return e.type==="group"})).value;return n.trim().length===0?" ":n}function getDecimalSeparator(e){var r=createLocaleNumberFormatter(e);var t=r.formatToParts(1.1);return t.find((function(e){return e.type==="decimal"})).value}function getMinusSign(e){var r=createLocaleNumberFormatter(e);var t=r.formatToParts(-9);return t.find((function(e){return e.type==="minusSign"})).value}function localizeNumberString(e,r,t,n){if(t===void 0){t=false}return sanitizeExponentialNumberString(e,(function(e){if(e){var i=sanitizeDecimalString(e.replace(defaultGroupSeparator,""));if(isValidNumber(i)){var a=new BigDecimal(i).formatToParts(r,n);var u=a.map((function(e){var n=e.type,i=e.value;switch(n){case"group":return t?getGroupSeparator(r):"";case"decimal":return getDecimalSeparator(r);case"minusSign":return getMinusSign(r);default:return i}})).reduce((function(e,r){return e+r}));return u}}return e}))}export{locales as a,delocalizeNumberString as d,getDecimalSeparator as g,isValidNumber as i,localizeNumberString as l,parseNumberString as p,sanitizeNumberString as s};